name: Build and release a new staging docker image

permissions:
    packages: write
    contents: read

on:
    push:
        branches: ["staging"]
        paths-ignore:
          - ".github/**"
          - ".vscode/**"
          - ".editorconfig"
          - ".env.example"
          - ".gitignore"
          - "LICENSE"
          - "README.md"

    workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
    ci:
        uses: ./.github/workflows/ci.yaml

    path-filter:
        runs-on: self-hosted
        outputs:
            migrations: ${{ steps.filter.outputs.migrations }}
        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Filter changed paths
            uses: dorny/paths-filter@v3
            id: filter
            with:
                base: ${{ github.ref }}
                filters: |
                    migrations:
                      - 'migrations/**'

    build-staging-backend:
        runs-on: self-hosted
        needs: ci
        steps:
          - name: Load docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: |
                    ghcr.io/blokmap/blokmap-backend
                tags: |
                    type=raw,value={{sha}}
                    type=raw,value=latest

          - name: Login to GHCR
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
                file: Dockerfile.staging
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                cache-from: type=registry,ref=ghcr.io/blokmap/blokmap-backend:buildcache
                cache-to: type=registry,ref=ghcr.io/blokmap/blokmap-backend:buildcache,mode=max

    build-staging-migrations:
        runs-on: self-hosted
        needs: [path-filter, ci]
        if: needs.path-filter.outputs.migrations == 'true'
        steps:
          - name: Load docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: |
                    ghcr.io/blokmap/blokmap-migrations
                tags: |
                    type=raw,value={{sha}}
                    type=raw,value=latest

          - name: Login to GHCR
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
                file: Dockerfile.migrations
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                cache-from: type=registry,ref=ghcr.io/blokmap/blokmap-migrations:buildcache
                cache-to: type=registry,ref=ghcr.io/blokmap/blokmap-migrations:buildcache,mode=max

    deploy-staging:
        runs-on: self-hosted
        needs: [path-filter, build-staging-migrations]
        if: needs.path-filter.outputs.migrations == 'true'
        steps:
          - name: Run migrations
            uses: appleboy/ssh-action@v1.2.1
            with:
                host: ${{ secrets.STAGING_HOST }}
                username: ${{ secrets.STAGING_USERNAME }}
                key: ${{ secrets.PRODUCTION_SSH_KEY }}
                debug: true
                script: |
                    cd /home/blokmap/deploy && git pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml up blokmap-staging-migrations

          - name: Deploy backend
            uses: appleboy/ssh-action@v1.2.1
            with:
                host: ${{ secrets.STAGING_HOST }}
                username: ${{ secrets.STAGING_USERNAME }}
                key: ${{ secrets.PRODUCTION_SSH_KEY }}
                debug: true
                script: |
                    cd /home/blokmap/deploy && git pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml up blokmap-staging-backend -d

    deploy-staging-backend:
        runs-on: self-hosted
        needs: [path-filter, build-staging-backend]
        if: needs.path-filter.outputs.migrations == 'false'
        steps:
          - name: Deploy backend
            uses: appleboy/ssh-action@v1.2.1
            with:
                host: ${{ secrets.STAGING_HOST }}
                username: ${{ secrets.STAGING_USERNAME }}
                key: ${{ secrets.PRODUCTION_SSH_KEY }}
                debug: true
                script: |
                    cd /home/blokmap/deploy && git pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml pull
                    docker compose -f /home/blokmap/deploy/production/compose.staging.yaml up blokmap-staging-backend -d
