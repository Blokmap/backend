name: Build and release a new docker image

on:
    push:
        branches: [main]
        tags: ["v*.*.*"]

jobs:
    lint-and-format:
        uses: ./.github/workflows/lint-and-test.yaml@lint-and-format

    test:
        uses: ./.github/workflows/lint-and-test.yaml@test

    release:
        runs-on: self-hosted
        needs: [lint-and-format, test]
        steps:
          - name: Load docker metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: |
                    ghcr.io/blokmap/blokmap
                tags: |
                    type=semver,pattern={{version}}

          - name: Login to GHCR
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push
            uses: docker/build-push-action@v6
            with:
                file: Dockerfile.prod
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                cache-from: type=registry,ref=ghcr.io/blokmap/blokmap-backend:latest
                cache-to: type=inline

    deploy:
        runs-on: self-hosted
        needs: [release]
        steps:
          - name: Run migrations
            uses: appleboy/ssh-action@v1.2.1
            with:
                host: ${{ secrets.PRODUCTION_HOST }}
                username: ${{ secrets.PRODUCTION_USERNAME }}
                key: ${{ secrets.PRODUCTION_SSH_KEY }}
                script: |
                    docker compose -f $STAGING_COMPOSE_FILE pull
                    docker compose -f $STAGING_COMPOSE_FILE up blokmap-staging-migrations

          - name: Deploy backend
            uses: appleboy/ssh-action@v1.2.1
            with:
                host: ${{ secrets.PRODUCTION_HOST }}
                username: ${{ secrets.PRODUCTION_USERNAME }}
                key: ${{ secrets.PRODUCTION_SSH_KEY }}
                script: |
                    docker compose -f $STAGING_COMPOSE_FILE pull
                    docker compose -f $STAGING_COMPOSE_FILE up blokmap-staging-backend -d
